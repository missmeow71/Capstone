{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport { gateway as MoltinGateway } from '@moltin/sdk';\nvar Moltin = MoltinGateway({\n  client_id: 'TkrDPNqfC1j7AJFFUHnMZbN9RzPygkff3beqMhxQsl'\n});\nexport var getProducts = function getProducts() {\n  return Moltin.Products.With('main_image').All();\n};\nexport var getProductById = function getProductById(id) {\n  return Moltin.Products.With('main_image').Get(id);\n};\nexport var addToCart = function addToCart(productId, quantity) {\n  return Moltin.Cart().AddProduct(productId, quantity);\n};\nexport var getCartItems = function getCartItems(id) {\n  return Moltin.Cart(id).Items();\n};\nexport var removeFromCart = function removeFromCart(itemId, cartId) {\n  return Moltin.Cart(cartId).RemoveItem(itemId);\n};\nexport var checkoutCart = function checkoutCart(cartId, customer, billing) {\n  return Moltin.Cart(cartId).Checkout(customer, billing);\n};\nexport var payForOrder = function payForOrder(orderId, token, email) {\n  return Moltin.Orders.Payment(orderId, {\n    gateway: 'stripe',\n    method: 'purchase',\n    payment: token,\n    options: {\n      receipt_email: email\n    }\n  });\n};\nexport var register =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(_ref) {\n    var email, password, rest, _ref3, _ref3$data, name, id, _ref4, token;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            email = _ref.email, password = _ref.password, rest = _objectWithoutProperties(_ref, [\"email\", \"password\"]);\n            _context.next = 3;\n            return Moltin.Customers.Create(_objectSpread({\n              type: 'customer',\n              email: email,\n              password: password\n            }, rest));\n\n          case 3:\n            _ref3 = _context.sent;\n            _ref3$data = _ref3.data;\n            name = _ref3$data.name;\n            id = _ref3$data.id;\n            _context.next = 9;\n            return login({\n              email: email,\n              password: password\n            });\n\n          case 9:\n            _ref4 = _context.sent;\n            token = _ref4.token;\n            return _context.abrupt(\"return\", {\n              id: id,\n              name: name,\n              email: email,\n              token: token\n            });\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function register(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var login =\n/*#__PURE__*/\nfunction () {\n  var _ref6 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(_ref5) {\n    var email, password, _ref7, token;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            email = _ref5.email, password = _ref5.password;\n            _context2.next = 3;\n            return Moltin.Customers.Token(email, password);\n\n          case 3:\n            _ref7 = _context2.sent;\n            token = _ref7.data.token;\n            return _context2.abrupt(\"return\", {\n              token: token\n            });\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function login(_x2) {\n    return _ref6.apply(this, arguments);\n  };\n}();","map":null,"metadata":{},"sourceType":"module"}