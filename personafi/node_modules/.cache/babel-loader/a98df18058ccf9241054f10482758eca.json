{"ast":null,"code":"var _jsxFileName = \"/Users/missmeow/Documents/Capstone/personafi/components/CartItemList.js\";\nimport React from \"react\";\nimport Link from 'next/link';\nimport { Item, Loader, Button, Message } from 'semantic-ui-react';\nexport default (function (_ref) {\n  var items = _ref.items,\n      removeFromCart = _ref.removeFromCart,\n      loading = _ref.loading,\n      completed = _ref.completed;\n  if (loading) return React.createElement(Loader, {\n    active: true,\n    inline: \"centered\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  });\n  if (completed) return React.createElement(Message, {\n    success: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(Message.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Order Placed!\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Congratulations! Your order is on its way\"));\n\n  if (items.length === 0) {\n    return React.createElement(Message, {\n      warning: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(Message.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"Your cart is empty!\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"Please add some items to your cart before resuming checkout.\"));\n  }\n\n  var mapCartItemsToItems = function mapCartItemsToItems(items) {\n    return items.map(function (_ref2) {\n      var id = _ref2.id,\n          product_id = _ref2.product_id,\n          name = _ref2.name,\n          quantity = _ref2.quantity,\n          meta = _ref2.meta;\n      var price = meta.display_price.with_tax.unit.formatted || null;\n      return {\n        childKey: id,\n        header: React.createElement(Link, {\n          href: \"/product?id=\".concat(product_id),\n          passHref: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, React.createElement(Item.Header, {\n          as: \"a\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, name)),\n        meta: \"\".concat(quantity, \"x \").concat(price),\n        extra: React.createElement(Button, {\n          basic: true,\n          icon: \"remove\",\n          floated: \"right\",\n          onClick: function onClick() {\n            return removeFromCart(id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        })\n      };\n    });\n  };\n\n  return React.createElement(Item.Group, {\n    divided: true,\n    items: mapCartItemsToItems(items),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  });\n});","map":{"version":3,"sources":["/Users/missmeow/Documents/Capstone/personafi/components/CartItemList.js"],"names":["Link","Item","Loader","Button","Message","items","removeFromCart","loading","completed","length","mapCartItemsToItems","map","id","product_id","name","quantity","meta","price","display_price","with_tax","unit","formatted","childKey","header","extra"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAAQC,IAAR,EAAcC,MAAd,EAAsBC,MAAtB,EAA8BC,OAA9B,QAA4C,mBAA5C;AAEA,gBAAe,gBAAiD;AAAA,MAA/CC,KAA+C,QAA/CA,KAA+C;AAAA,MAAxCC,cAAwC,QAAxCA,cAAwC;AAAA,MAAxBC,OAAwB,QAAxBA,OAAwB;AAAA,MAAfC,SAAe,QAAfA,SAAe;AAC9D,MAAID,OAAJ,EAAa,OAAO,oBAAC,MAAD;AAAQ,IAAA,MAAM,MAAd;AAAe,IAAA,MAAM,EAAE,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEb,MAAIC,SAAJ,EACI,OACE,oBAAC,OAAD;AAAS,IAAA,OAAO,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD,CAAS,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAFF,CADF;;AAOJ,MAAIH,KAAK,CAACI,MAAN,KAAiB,CAArB,EAAwB;AACtB,WACE,oBAAC,OAAD;AAAS,MAAA,OAAO,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD,CAAS,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sEAFF,CADF;AAMD;;AACD,MAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAL,KAAK;AAAA,WACjCA,KAAK,CAACM,GAAN,CAAU,iBAA4C;AAAA,UAA1CC,EAA0C,SAA1CA,EAA0C;AAAA,UAAtCC,UAAsC,SAAtCA,UAAsC;AAAA,UAA1BC,IAA0B,SAA1BA,IAA0B;AAAA,UAApBC,QAAoB,SAApBA,QAAoB;AAAA,UAAVC,IAAU,SAAVA,IAAU;AACpD,UAAMC,KAAK,GAAGD,IAAI,CAACE,aAAL,CAAmBC,QAAnB,CAA4BC,IAA5B,CAAiCC,SAAjC,IAA8C,IAA5D;AAEA,aAAO;AACLC,QAAAA,QAAQ,EAAEV,EADL;AAELW,QAAAA,MAAM,EACJ,oBAAC,IAAD;AAAM,UAAA,IAAI,wBAAiBV,UAAjB,CAAV;AAAyC,UAAA,QAAQ,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD,CAAM,MAAN;AAAa,UAAA,EAAE,EAAC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAqBC,IAArB,CADF,CAHG;AAOLE,QAAAA,IAAI,YAAKD,QAAL,eAAkBE,KAAlB,CAPC;AAQLO,QAAAA,KAAK,EACH,oBAAC,MAAD;AACE,UAAA,KAAK,MADP;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,OAAO,EAAC,OAHV;AAIE,UAAA,OAAO,EAAE;AAAA,mBAAMlB,cAAc,CAACM,EAAD,CAApB;AAAA,WAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AATG,OAAP;AAiBD,KApBD,CADiC;AAAA,GAAjC;;AAuBA,SAAO,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,OAAO,MAAnB;AAAoB,IAAA,KAAK,EAAEF,mBAAmB,CAACL,KAAD,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CA3CD","sourcesContent":["import Link from 'next/link'\nimport {Item, Loader, Button, Message} from 'semantic-ui-react'\n\nexport default ({items, removeFromCart, loading, completed}) => {\n  if (loading) return <Loader active inline ='centered' />\n\n  if (completed)\n      return (\n        <Message success>\n          <Message.Header>Order Placed!</Message.Header>\n          <p>Congratulations! Your order is on its way</p>\n        </Message>\n      )\n\n  if (items.length === 0) {\n    return (\n      <Message warning>\n        <Message.Header>Your cart is empty!</Message.Header>\n        <p>Please add some items to your cart before resuming checkout.</p>\n      </Message>\n    )\n  }\n  const mapCartItemsToItems = items =>\n  items.map(({id, product_id, name, quantity, meta}) => {\n    const price = meta.display_price.with_tax.unit.formatted || null\n\n    return {\n      childKey: id,\n      header: (\n        <Link href={`/product?id=${product_id}`} passHref>\n          <Item.Header as=\"a\">{name}</Item.Header>\n        </Link>\n      ),\n      meta: `${quantity}x ${price}`,\n      extra: (\n        <Button\n          basic\n          icon='remove'\n          floated='right'\n          onClick={() => removeFromCart(id)}\n        />\n      )\n    }\n  })\n\n  return <Item.Group divided items={mapCartItemsToItems(items)} />\n}"]},"metadata":{},"sourceType":"module"}