{"ast":null,"code":"import React from \"react\";\nimport Link from 'next/link';\nimport { Item, Loader, Button, Message } from 'semantic-ui-react';\nexport default (function (_ref) {\n  var items = _ref.items,\n      removeFromCart = _ref.removeFromCart,\n      loading = _ref.loading,\n      completed = _ref.completed;\n  if (loading) return React.createElement(Loader, {\n    active: true,\n    inline: \"centered\"\n  });\n  if (completed) return React.createElement(Message, {\n    success: true\n  }, React.createElement(Message.Header, null, \"Order Placed!\"), React.createElement(\"p\", null, \"Congratulations! Your order is on its way\"));\n\n  if (items.length === 0) {\n    return React.createElement(Message, {\n      warning: true\n    }, React.createElement(Message.Header, null, \"Your cart is empty!\"), React.createElement(\"p\", null, \"Please add some items to your cart before resuming checkout.\"));\n  }\n\n  var mapCartItemsToItems = function mapCartItemsToItems(items) {\n    return items.map(function (_ref2) {\n      var id = _ref2.id,\n          product_id = _ref2.product_id,\n          name = _ref2.name,\n          quantity = _ref2.quantity,\n          meta = _ref2.meta;\n      var price = meta.display_price.with_tax.unit.formatted || null;\n      return {\n        childKey: id,\n        header: React.createElement(Link, {\n          href: \"/product?id=\".concat(product_id),\n          passHref: true\n        }, React.createElement(Item.Header, {\n          as: \"a\"\n        }, name)),\n        meta: \"\".concat(quantity, \"x \").concat(price),\n        extra: React.createElement(Button, {\n          basic: true,\n          icon: \"remove\",\n          floated: \"right\",\n          onClick: function onClick() {\n            return removeFromCart(id);\n          }\n        })\n      };\n    });\n  };\n\n  return React.createElement(Item.Group, {\n    divided: true,\n    items: mapCartItemsToItems(items)\n  });\n});","map":null,"metadata":{},"sourceType":"module"}