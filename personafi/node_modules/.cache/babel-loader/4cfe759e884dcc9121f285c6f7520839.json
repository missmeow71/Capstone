{"ast":null,"code":"var _jsxFileName = \"/Users/missmeow/Documents/Capstone/personafi/components/CartSummary.js\";\nimport React from \"react\";\nimport StripeCheckout from 'react-stripe-checkout';\nimport { Button, Segment, Divider } from 'semantic-ui-react';\nvar stripeKey = 'pk_test_UBWSVyq6rmqp2x0bEwVQiicn';\nexport default (function (_ref) {\n  var handleCheckout = _ref.handleCheckout,\n      _ref$display_price$wi = _ref.display_price.with_tax,\n      currency = _ref$display_price$wi.currency,\n      amount = _ref$display_price$wi.amount,\n      formatted = _ref$display_price$wi.formatted;\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }), React.createElement(Segment, {\n    clearing: true,\n    size: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Sub Total:\"), \" \", formatted, React.createElement(StripeCheckout, {\n    name: \"Personafi Marketplace\",\n    amount: amount,\n    currency: currency,\n    stripeKey: stripeKey,\n    shippingAddress: false,\n    billingAddress: true,\n    zipCode: true,\n    token: handleCheckout,\n    reconfigureOnUpdate: false,\n    triggerEvent: \"onClick\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"orange\",\n    floated: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Check Out\"))));\n});","map":{"version":3,"sources":["/Users/missmeow/Documents/Capstone/personafi/components/CartSummary.js"],"names":["StripeCheckout","Button","Segment","Divider","stripeKey","handleCheckout","display_price","with_tax","currency","amount","formatted"],"mappings":";;AAAA,OAAOA,cAAP,MAA2B,uBAA3B;AACA,SAAQC,MAAR,EAAgBC,OAAhB,EAAyBC,OAAzB,QAAuC,mBAAvC;AAEA,IAAMC,SAAS,GAAG,kCAAlB;AAEA,gBAAe;AAAA,MACXC,cADW,QACXA,cADW;AAAA,mCAEXC,aAFW,CAEKC,QAFL;AAAA,MAEgBC,QAFhB,yBAEgBA,QAFhB;AAAA,MAE0BC,MAF1B,yBAE0BA,MAF1B;AAAA,MAEkCC,SAFlC,yBAEkCA,SAFlC;AAAA,SAGP,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAGI,oBAAC,OAAD;AAAS,IAAA,QAAQ,MAAjB;AAAkB,IAAA,IAAI,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,OAC6BA,SAD7B,EAEA,oBAAC,cAAD;AACA,IAAA,IAAI,EAAC,uBADL;AAEA,IAAA,MAAM,EAAED,MAFR;AAGA,IAAA,QAAQ,EAAED,QAHV;AAIA,IAAA,SAAS,EAAEJ,SAJX;AAKA,IAAA,eAAe,EAAE,KALjB;AAMA,IAAA,cAAc,EAAE,IANhB;AAOA,IAAA,OAAO,EAAE,IAPT;AAQA,IAAA,KAAK,EAAEC,cARP;AASA,IAAA,mBAAmB,EAAE,KATrB;AAUA,IAAA,YAAY,EAAC,SAVb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYA,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAuB,IAAA,OAAO,EAAC,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAZA,CAFA,CAHJ,CAHO;AAAA,CAAf","sourcesContent":["import StripeCheckout from 'react-stripe-checkout'\nimport {Button, Segment, Divider} from 'semantic-ui-react'\n\nconst stripeKey = 'pk_test_UBWSVyq6rmqp2x0bEwVQiicn'\n\nexport default ({\n    handleCheckout,\n    display_price: {with_tax: {currency, amount, formatted}}}) => (\n        <React.Fragment>\n            <Divider />\n\n            <Segment clearing size='large'>\n            <strong>Sub Total:</strong> {formatted}\n            <StripeCheckout\n            name=\"Personafi Marketplace\"\n            amount={amount}\n            currency={currency}\n            stripeKey={stripeKey}\n            shippingAddress={false}\n            billingAddress={true}\n            zipCode={true}\n            token={handleCheckout}\n            reconfigureOnUpdate={false}\n            triggerEvent=\"onClick\"\n            >\n            <Button color='orange' floated='right'>\n            Check Out\n            </Button>\n            </StripeCheckout>\n            </Segment>\n        </React.Fragment>\n    )"]},"metadata":{},"sourceType":"module"}